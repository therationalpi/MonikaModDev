# module that generates expression test files

import spritepuller as spp
import gamedir as GDIR

import menutils

# bad code file name
EXPR_TEST_FN = "zzzz_dev_exprtest.rpy"


def generate_expr_test(quiet=False):
    """
    Uses the expressions retrieved from the spritepuller utility,
    then cleans them(remove duplicates, remove old expressions),
    sorts them and finally generates a file named zzzz_dev_exprtest.rpy
    which adds an event which can be accessed in-game to check every single
    expression added

    IN:
        quiet - True will suppress output
    """
    if not quiet:
        print("\nPulling Sprites ...")
    # pull the sprites and put them in a set to remove duplicates
    sp_list = set(spp.pull_sprite_list())

    # pick only the new ones
    sp_list = [x for x in sp_list if len(x) > 3]

    # sort them
    sp_list.sort()

    if not quiet:
        print("\nWriting to file ...")

    with open(GDIR.REL_PATH_DEV+ EXPR_TEST_FN, "w") as outfile:

        # write the header
        outfile.write(__ZZ_EXPR_TEST_HEADER)

        for sp in sp_list:

            # write each line format will be 'm expr_code "expr_code"'
            outfile.write(__ZZ_EXPR_TEST_LINE.format(sp) + "\n")

        # write the footer
        outfile.write(__ZZ_EXPR_TEST_FOOTER)

    if not quiet:
        print("\nDone")
        menutils.e_pause()

def run():
    """
    Runs this module (menu-related)
    """
    # for now, we only have 1 workflow
    generate_expr_test()



#### strings for formatting:
__ZZ_EXPR_TEST_HEADER = """
############################ AUTO-GENERATED ###################################
## DO NOT EDIT THIS FILE                                                     ##
##                                                                           ##
## This was auto-generated by the testsgenerator tool                        ##
###############################################################################
#
# This is a module designed for running test on all the current expressions.
# NOTE: This is going to be a click nightmare.
#   USE AT YOUR OWN RISK
#

init 5 python:
    addEvent(
        Event(
            persistent.event_database,
            eventlabel="dev_expr_testing",
            category=["dev"],
            prompt="TEST EXPRESSIONS",
            pool=True,
            unlocked=True
        )
    )

label dev_expr_testing:
"""
__ZZ_EXPR_TEST_LINE = '    m {0} "{0}"'
__ZZ_EXPR_TEST_FOOTER = "    return"

